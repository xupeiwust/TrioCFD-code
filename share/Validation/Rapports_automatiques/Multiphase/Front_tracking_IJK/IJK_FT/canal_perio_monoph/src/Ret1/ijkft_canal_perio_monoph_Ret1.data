dimension 3
Probleme_FTD_IJK pb

Domaine_IJK DOM
Lire DOM
{
  nbelem 96 32 32
  size_dom 6.283185307 2. 2. 
  perio 1 1 0
  nproc 1 2 4
  ijk_splitting_ft_extension 0
}

schema_euler_explicite_IJK sch

lire sch 
{
  tinit 0.0
  timestep 0.3
  timestep_facsec 1.0
  nb_pas_dt_max 2000 # 2000 #
  cfl 1.0
  fo  0.5 # pour stabiliser uy en euler_explicite.  0.6666 suffit pour RK3 #
  oh  1.0
  dt_sauvegarde 1000

  # Smooth interface during the first time-step #
  # first_step_interface_smoothing #
}

option_ijk { check_divergence disable_diphasique }
IJK dis

associer sch pb
associer DOM pb
Discretize pb dis

system "mkdir -p lata"

lire pb
{
  Solved_Equations
  {
    Navier_Stokes_FTD_IJK hydraulique
  }

  Fluide_Diphasique_IJK
  {
    # Give a number for each phase #
    fluide0 Fluide_Incompressible # Vapour #
    {
      mu  Champ_Uniforme 1 1.
      rho Champ_Uniforme 1 1.
    }
    fluide1 Fluide_Incompressible # Liquid #
    {
      mu  Champ_Uniforme 1 1.
      rho Champ_Uniforme 1 1.
    }
    # Surface tension #
    sigma Champ_Uniforme 1 0.0

    # Gravity field #
    gravite Champ_Uniforme 3 0. 0. 0.
  }

  hydraulique
  {
    Boundary_Conditions
    {
      bctype_kmin Paroi
      bctype_kmax Paroi
    }
    # velocity_convection_op Centre # 
    multigrid_solver {
    solver_precision mixed
    coarsen_operators 3
      Coarsen_Operator_Uniform { coarsen_i 1 coarsen_j 1 coarsen_k 2 }
      Coarsen_Operator_Uniform { coarsen_i 2 coarsen_j 2 coarsen_k 2 }
      Coarsen_Operator_Uniform {  } 	
    ghost_size 1
    pre_smooth_steps 1 7
    smooth_steps 1 7
    relax_jacobi 1 0.7
    solveur_grossier GCP { seuil 1e-10  precond ssor { omega 1.5 } }
    seuil 1e-8
    nb_full_mg_steps 2 20 1
    
    } 
  # ----------------------------------------------------------------- #
  #             FORCAGE DE L'ECOULEMENT :                             #
  # ----------------------------------------------------------------- #
  # expression_derivee_force   A*(Ub_objectif+(B*C/A)-v_moy)-B*force  #
  # avec C = rho * tau_moy/h 
         A = omega**2 * rho
         B = 2 * omega * rho #
  # terme_force_init = C ? = rho * tau_moy/h #
  # Choix 1 : Ub = 0.33398423   et omega = 10. s^-1  #
  expression_derivee_force 1.e+2*(0.33398423+0.2-v_moyen)-2.e+1*force
  terme_force_init  1.0  # tau * 2 S / V = tau/h #
  # La vitesse initiale est donnee par : 
  expression_vx_init Ub   ou    Ub*3./2.*z*(2-z)
  expression_vy_init 0.2 * Ub * sin(.........) + 0.1 * Ub * sin(100*pi*pi*Ly*y)
  expression_vz_init 0.
 
avec Ub : Ma vitesse debitante cible.
     ..... = SOMME_1^3 (sin(xp*omegak)*sin(zp*omegak)*sin(yp*omegak)
     xp = x/(Lx)*2*pi = x/Ly    (car Lx = 2*pi*Ly)
     yp = y/(Ly)*2*pi
     zp = z/(Lz)*2*pi
  #
  expression_vx_init 0.3 # *3./2.*z*(2-z)  # 
  # Une perturbation transverse : #
  expression_vy_init 0.6*0.3*3./2.*z*(2-z)*(sin(x/6.283185307*2*3.1415926535897931)*sin(z/2*2*3.1415926535897931)+sin(x/6.283185307*2*3.1415926535897931*6)*sin(z/2*2*3.1415926535897931*4)+sin(x/6.283185307*2*3.1415926535897931*2)*sin(z/2*2*3.1415926535897931*1)+0.5*sin(10526.009024960777*x))
  expression_vz_init 0.
  }
  {
  # Pour Creer le fichier de Reprise #
  nom_sauvegarde monop_Ret1.repr 
  # REPRISE du champ de vitesse de l'interface et des statistiques : #
  # nom_reprise monop_Ret1.repr #
    
  }
  post_processing 
  {
    format LATA
    # fichier lata/post.lata #
    nb_pas_dt_post 1000
    nb_pas_dt_post_stats_plans 50
    fields 
    {
       PRESSURE elem
       VELOCITY FACES
    }
    t_debut_statistiques 0.1
  }
}
solve pb
Fin
